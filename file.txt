app/extra/Connection.php:12 credentialsi nesmiju biti vidljivi u kodu, to se stavi u vani nedostupni file koji ucitas iz koda:
https://www.codementor.io/ccornutt/keeping-credentials-secure-in-php-kvcbrk55z

ovo bi trebao bit singleton, ali uvijek će se loadati new instance, probaj pozvati ovu funkciju više puta da isprobaš:
app/extra/Connection.php:29 , ispravi to na singleton.

bilo kakav view, bi se trebao renderati nakon što se zakljuci cijela kontroler putanja i dobiju svi podatci. View ide zadnji,
ne prije resolvanja kontrolera:
app/extra/Port.php:16

da li je user ulogin ili ne je najbolje provjerit u kontroleru (kad se kontroler pokrene pozvat u konstruktu neku npr
predispatch() funkciju koja zove $session wrapper i tamo pokuša odredit da li je user logiran ili ne.
Napraviš neku kontroler abstraktnu klasu koja implementira to ponašanje tako da kad napraviš druge kontrolere
i extendaš tu klasu, svi će imati tu provjeru i te podatke. Onda iz toga kasnije odredis koji ce view dobit
(tj pospajas file-ove u nekoj render metodi), ili ako nesmije biti tamo gdje je, napraviš redirect na 404.

app/extra/Port.php:52 i app/extra/Port.php:37, metodu se treba izvući kao dio url-a, a ako nepostoji defaultna da bude index.
također na app/extra/Port.php:52 provjeriti da li uopće postoji ta metoda za taj kontroler i ako ne, preusmjeriti na 404.

trebaš implementirati 404 handler (i 404 page), i maintenance page, npr ako se desi neki 500 error da se uvijek završi na tom
page-u, istestiraš to tako da namjerno probaš pokrenut nešto što bi puklo u try/catchu.

app/repository/UserRepository.php:14
password storing/security:
https://stackoverflow.com/questions/43864379/best-way-encrypt-password-php-in-2017#answer-43864419

PDO kako se koristi:
https://phpdelusions.net/pdo#dml
kako ga ti koristis:
app/repository/UserRepository.php:16
$this->con->query("UPDATE users SET user_password='$user_change_password' WHERE user_id = '$user_id'");

pise u zadatku instanciranje objekata u singletonima, idealno bi bilo da ti sve sto koristi neke podatke (useri, slike) budu wrappani u objekte sa getterima i setterima:
ovo prođi kad budeš mogao: https://github.com/ivanweiler/magic-of-modern-php
ovo implementiraj ako stigneš; gettere i settere (03): https://github.com/ivanweiler/magic-of-modern-php/tree/master/01-magic-methods

Nije hitno:
malo koristiš velika a malo mala slova:
app/model/RegistrationModel.php:28
php standard nalaze ovakav naming varijabli: $firstName